'use strict';

function hasBalancedBrackets(input) {
  if (input.length % 2 !== 0) return false;

  for (let i = 0; i < input.length / 2; i++) {
    const tail = input.length - 1 - i;
    if (!closedBrackets(input.charAt(i), input.charAt(tail))) {
      return false;
    }
  }
  return true;
}

function closedBrackets(firstChar, secondChar) {
  console.log(`firstChar:${firstChar} secondChar:${secondChar}`);

  if (firstChar === '{') {
    return (secondChar === '}');
  } else if (firstChar === '[') {
    return (secondChar === ']');
  } else if (firstChar === '(') {
    return (secondChar === ')');
  }

  return false;
}

const input = [];

// let str = ')(((]){))}])}][)(}()])]]([{))])}}}]]([{{}}}]{(}[{}[{[([]{(}[}}]}{}[{[}{]{](({}]]{[)[[[])[}[()}((){}[{()]{([]{){()}}(])[}[]](]}]({{])])]}{)][}[(})}[((}{)[}]]]((}][(}[}[{}}}{])((}[]])(()}{)[}]){{}}}()})))()(}}))({))(]()(}}){(}(){]]]})}]}([)]{]([({]{][}{]})()(}({})}]]{{{}[[]}}}][}{}[[)))(}{](]((}[{]}}{]]][}{([{{}{)}([])({((}({{}){)}}){(){)[]]](}}](}]}[}{}})}))(([][}{])}[[][[{])}{{[)(}]])][[){[}])}(}({]))){({]){((([(}]]([{{[{]}{)){{{][})[)}([[()[[)}[)][([]{()[}{]({({(]}[(][{)}[]{]][[][({[}{((([)})(](}[})}[](}({[[{{){))]]()][[])}])}}{](]({}}{]}[))]({[)][]{))}({[)){]){}}([(()[)]]]{[}{([[[[([))({[{{][){)]]]){([}}[{}([(][]]][[}][{()[{{}[(]]{})([{}}{[){}](]]{[}]](({[(})}){}]{){([))})]}([[})(]{{[{([}))}}{][()[}}[]{)]}{)(]}])][[[([({}[)}][]{}]])}({[)}(]{]](}}}){{[{)[}){){{})](][(}]})())]]([[){{)}}(}[}}[))[[)({[(({]{[(){{[{]{){[}[){([{{[[}[}[({{]{)()(]]{[)((})}][([[{{}}{][[}(]()[)()][)())[{)}{(}}}])([{)}}[]}))(]{)[[()}[([{[}}({{[}([{[({{))(}(]][][{})]]}(]{([{)])(}[}})(]{][]}}]]{]][[]([))}]]{]})]}[';
// input.push(str);

str = '{()[[[]]({{}[{}]}){((()))([[]]([]{}[]{{()({})[{(())[]}]([{[]}])}()[][[]]()[([{{{(){[[(()(([()]([][]()()){[{}][((()[()])[{(([([]{({})})](){[]{}[[[][{{{}{[()]{[]{}}}(())}}]()[{}{}{[[]][[]{{()}}]}{([[[]]({[]})]{}){}}][[{[()]}]][]{}]{}()]{}})([])){}}[{}[]]{}]){[{}]{{{}[()](){}}[[{}]]{[{}]}{}()([]){}[][]}([]((){[][]{[({{}}[[[][()]][[][]]{}]){[][[]()]{}}[]]({}[{(([[]()](){((({()(){([])()[{{[[{}][]]}(){}[][][[]{}[]{{[(([{}]))]()[]}(())}][([])[{(())}](())[]([[([])]])]}]}}({}{}))))}){{}}(({()}){})[](([]()()[{([]){}(){(({}[]))}}()](()){{}{}}){({})}[[([[]()][])()[]]()])(()))}])()}{({()})(([[]]{()}[]))}})()(){[]})()[{{{}}[]}{}{}[][(({}[[{}(){}]]){{[[]{[{(()[])((([[]])((())))){}[][]}]({})}(())]}{}((){{}((){[[][]]}([]){({}[[]({}{}){}])}(){})}(()))[]}({([][])})()){}]]}{(){}}()]{[]}{}[]{}{{}{}}[{}{{()}}]({(){[]}({}[]()[])({}{{{[]{{}}}{}[][{}[]][][]}[{{()}()[{}[]]{}([]())}]})[]({[]})})[]}{(())[[]]})[](){[[]{}]{}({{}(){[]}}[]{{}[[][]][]()}){{}}})[(()[])[()[[{}()]()]()[]]])][[]({([{{}}])})]]}}}}])]}))}]}';
input.push(str);

for (let i = 0; i < input.length; i ++) {
  if (hasBalancedBrackets(input[i])) {
    console.log('YES');
  } else {
    console.log('NO');
  }
}
